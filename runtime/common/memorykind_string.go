// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArrayBase-7]
	_ = x[MemoryKindDictionaryBase-8]
	_ = x[MemoryKindCompositeBase-9]
	_ = x[MemoryKindSimpleCompositeBase-10]
	_ = x[MemoryKindOptional-11]
	_ = x[MemoryKindNil-12]
	_ = x[MemoryKindVoid-13]
	_ = x[MemoryKindTypeValue-14]
	_ = x[MemoryKindPathValue-15]
	_ = x[MemoryKindCapabilityValue-16]
	_ = x[MemoryKindLinkValue-17]
	_ = x[MemoryKindStorageReferenceValue-18]
	_ = x[MemoryKindEphemeralReferenceValue-19]
	_ = x[MemoryKindInterpretedFunction-20]
	_ = x[MemoryKindHostFunction-21]
	_ = x[MemoryKindBoundFunction-22]
	_ = x[MemoryKindBigInt-23]
	_ = x[MemoryKindSimpleComposite-24]
	_ = x[MemoryKindAtreeArrayDataSlab-25]
	_ = x[MemoryKindAtreeArrayMetaDataSlab-26]
	_ = x[MemoryKindAtreeArrayElementOverhead-27]
	_ = x[MemoryKindAtreeMapDataSlab-28]
	_ = x[MemoryKindAtreeMapMetaDataSlab-29]
	_ = x[MemoryKindAtreeMapElementOverhead-30]
	_ = x[MemoryKindPrimitiveStaticType-31]
	_ = x[MemoryKindCompositeStaticType-32]
	_ = x[MemoryKindInterfaceStaticType-33]
	_ = x[MemoryKindVariableSizedStaticType-34]
	_ = x[MemoryKindConstantSizedStaticType-35]
	_ = x[MemoryKindDictionaryStaticType-36]
	_ = x[MemoryKindOptionalStaticType-37]
	_ = x[MemoryKindRestrictedStaticType-38]
	_ = x[MemoryKindReferenceStaticType-39]
	_ = x[MemoryKindCapabilityStaticType-40]
	_ = x[MemoryKindFunctionStaticType-41]
	_ = x[MemoryKindRawString-42]
	_ = x[MemoryKindAddressLocation-43]
	_ = x[MemoryKindBytes-44]
	_ = x[MemoryKindVariable-45]
	_ = x[MemoryKindValueToken-46]
	_ = x[MemoryKindSyntaxToken-47]
	_ = x[MemoryKindSpaceToken-48]
	_ = x[MemoryKindProgram-49]
	_ = x[MemoryKindIdentifier-50]
	_ = x[MemoryKindArgument-51]
	_ = x[MemoryKindBlock-52]
	_ = x[MemoryKindFunctionBlock-53]
	_ = x[MemoryKindParameter-54]
	_ = x[MemoryKindParameterList-55]
	_ = x[MemoryKindTransfer-56]
	_ = x[MemoryKindMembers-57]
	_ = x[MemoryKindTypeAnnotation-58]
	_ = x[MemoryKindDictionaryEntry-59]
	_ = x[MemoryKindFunctionDeclaration-60]
	_ = x[MemoryKindCompositeDeclaration-61]
	_ = x[MemoryKindInterfaceDeclaration-62]
	_ = x[MemoryKindEnumCaseDeclaration-63]
	_ = x[MemoryKindFieldDeclaration-64]
	_ = x[MemoryKindTransactionDeclaration-65]
	_ = x[MemoryKindImportDeclaration-66]
	_ = x[MemoryKindVariableDeclaration-67]
	_ = x[MemoryKindSpecialFunctionDeclaration-68]
	_ = x[MemoryKindPragmaDeclaration-69]
	_ = x[MemoryKindAssignmentStatement-70]
	_ = x[MemoryKindBreakStatement-71]
	_ = x[MemoryKindContinueStatement-72]
	_ = x[MemoryKindEmitStatement-73]
	_ = x[MemoryKindExpressionStatement-74]
	_ = x[MemoryKindForStatement-75]
	_ = x[MemoryKindIfStatement-76]
	_ = x[MemoryKindReturnStatement-77]
	_ = x[MemoryKindSwapStatement-78]
	_ = x[MemoryKindSwitchStatement-79]
	_ = x[MemoryKindWhileStatement-80]
	_ = x[MemoryKindBooleanExpression-81]
	_ = x[MemoryKindNilExpression-82]
	_ = x[MemoryKindStringExpression-83]
	_ = x[MemoryKindIntegerExpression-84]
	_ = x[MemoryKindFixedPointExpression-85]
	_ = x[MemoryKindArrayExpression-86]
	_ = x[MemoryKindDictionaryExpression-87]
	_ = x[MemoryKindIdentifierExpression-88]
	_ = x[MemoryKindInvocationExpression-89]
	_ = x[MemoryKindMemberExpression-90]
	_ = x[MemoryKindIndexExpression-91]
	_ = x[MemoryKindConditionalExpression-92]
	_ = x[MemoryKindUnaryExpression-93]
	_ = x[MemoryKindBinaryExpression-94]
	_ = x[MemoryKindFunctionExpression-95]
	_ = x[MemoryKindCastingExpression-96]
	_ = x[MemoryKindCreateExpression-97]
	_ = x[MemoryKindDestroyExpression-98]
	_ = x[MemoryKindReferenceExpression-99]
	_ = x[MemoryKindForceExpression-100]
	_ = x[MemoryKindPathExpression-101]
	_ = x[MemoryKindConstantSizedType-102]
	_ = x[MemoryKindDictionaryType-103]
	_ = x[MemoryKindFunctionType-104]
	_ = x[MemoryKindInstantiationType-105]
	_ = x[MemoryKindNominalType-106]
	_ = x[MemoryKindOptionalType-107]
	_ = x[MemoryKindReferenceType-108]
	_ = x[MemoryKindRestrictedType-109]
	_ = x[MemoryKindVariableSizedType-110]
	_ = x[MemoryKindPosition-111]
	_ = x[MemoryKindRange-112]
	_ = x[MemoryKindElaboration-113]
	_ = x[MemoryKindActivation-114]
	_ = x[MemoryKindActivationEntries-115]
	_ = x[MemoryKindLast-116]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayBaseDictionaryBaseCompositeBaseSimpleCompositeBaseOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntSimpleCompositeAtreeArrayDataSlabAtreeArrayMetaDataSlabAtreeArrayElementOverheadAtreeMapDataSlabAtreeMapMetaDataSlabAtreeMapElementOverheadPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeRestrictedStaticTypeReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeRawStringAddressLocationBytesVariableValueTokenSyntaxTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeElaborationActivationActivationEntriesLast"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 56, 70, 83, 102, 110, 113, 117, 126, 135, 150, 159, 180, 203, 222, 234, 247, 253, 268, 286, 308, 333, 349, 369, 392, 411, 430, 449, 472, 495, 515, 533, 553, 572, 592, 610, 619, 634, 639, 647, 657, 668, 678, 685, 695, 703, 708, 721, 730, 743, 751, 758, 772, 787, 806, 826, 846, 865, 881, 903, 920, 939, 965, 982, 1001, 1015, 1032, 1045, 1064, 1076, 1087, 1102, 1115, 1130, 1144, 1161, 1174, 1190, 1207, 1227, 1242, 1262, 1282, 1302, 1318, 1333, 1354, 1369, 1385, 1403, 1420, 1436, 1453, 1472, 1487, 1501, 1518, 1532, 1544, 1561, 1572, 1584, 1597, 1611, 1628, 1636, 1641, 1652, 1662, 1679, 1683}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
