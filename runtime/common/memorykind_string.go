// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArrayBase-7]
	_ = x[MemoryKindDictionaryBase-8]
	_ = x[MemoryKindCompositeBase-9]
	_ = x[MemoryKindSimpleCompositeBase-10]
	_ = x[MemoryKindOptional-11]
	_ = x[MemoryKindNil-12]
	_ = x[MemoryKindVoid-13]
	_ = x[MemoryKindTypeValue-14]
	_ = x[MemoryKindPathValue-15]
	_ = x[MemoryKindCapabilityValue-16]
	_ = x[MemoryKindLinkValue-17]
	_ = x[MemoryKindStorageReferenceValue-18]
	_ = x[MemoryKindEphemeralReferenceValue-19]
	_ = x[MemoryKindInterpretedFunction-20]
	_ = x[MemoryKindHostFunction-21]
	_ = x[MemoryKindBoundFunction-22]
	_ = x[MemoryKindBigInt-23]
	_ = x[MemoryKindSimpleComposite-24]
	_ = x[MemoryKindAtreeArrayDataSlab-25]
	_ = x[MemoryKindAtreeArrayMetaDataSlab-26]
	_ = x[MemoryKindAtreeArrayElementOverhead-27]
	_ = x[MemoryKindAtreeMapDataSlab-28]
	_ = x[MemoryKindAtreeMapMetaDataSlab-29]
	_ = x[MemoryKindAtreeMapElementOverhead-30]
	_ = x[MemoryKindAtreeMapPreAllocatedElement-31]
	_ = x[MemoryKindPrimitiveStaticType-32]
	_ = x[MemoryKindCompositeStaticType-33]
	_ = x[MemoryKindInterfaceStaticType-34]
	_ = x[MemoryKindVariableSizedStaticType-35]
	_ = x[MemoryKindConstantSizedStaticType-36]
	_ = x[MemoryKindDictionaryStaticType-37]
	_ = x[MemoryKindOptionalStaticType-38]
	_ = x[MemoryKindRestrictedStaticType-39]
	_ = x[MemoryKindReferenceStaticType-40]
	_ = x[MemoryKindCapabilityStaticType-41]
	_ = x[MemoryKindFunctionStaticType-42]
	_ = x[MemoryKindRawString-43]
	_ = x[MemoryKindAddressLocation-44]
	_ = x[MemoryKindBytes-45]
	_ = x[MemoryKindVariable-46]
	_ = x[MemoryKindValueToken-47]
	_ = x[MemoryKindSyntaxToken-48]
	_ = x[MemoryKindSpaceToken-49]
	_ = x[MemoryKindProgram-50]
	_ = x[MemoryKindIdentifier-51]
	_ = x[MemoryKindArgument-52]
	_ = x[MemoryKindBlock-53]
	_ = x[MemoryKindFunctionBlock-54]
	_ = x[MemoryKindParameter-55]
	_ = x[MemoryKindParameterList-56]
	_ = x[MemoryKindTransfer-57]
	_ = x[MemoryKindMembers-58]
	_ = x[MemoryKindTypeAnnotation-59]
	_ = x[MemoryKindDictionaryEntry-60]
	_ = x[MemoryKindFunctionDeclaration-61]
	_ = x[MemoryKindCompositeDeclaration-62]
	_ = x[MemoryKindInterfaceDeclaration-63]
	_ = x[MemoryKindEnumCaseDeclaration-64]
	_ = x[MemoryKindFieldDeclaration-65]
	_ = x[MemoryKindTransactionDeclaration-66]
	_ = x[MemoryKindImportDeclaration-67]
	_ = x[MemoryKindVariableDeclaration-68]
	_ = x[MemoryKindSpecialFunctionDeclaration-69]
	_ = x[MemoryKindPragmaDeclaration-70]
	_ = x[MemoryKindAssignmentStatement-71]
	_ = x[MemoryKindBreakStatement-72]
	_ = x[MemoryKindContinueStatement-73]
	_ = x[MemoryKindEmitStatement-74]
	_ = x[MemoryKindExpressionStatement-75]
	_ = x[MemoryKindForStatement-76]
	_ = x[MemoryKindIfStatement-77]
	_ = x[MemoryKindReturnStatement-78]
	_ = x[MemoryKindSwapStatement-79]
	_ = x[MemoryKindSwitchStatement-80]
	_ = x[MemoryKindWhileStatement-81]
	_ = x[MemoryKindBooleanExpression-82]
	_ = x[MemoryKindNilExpression-83]
	_ = x[MemoryKindStringExpression-84]
	_ = x[MemoryKindIntegerExpression-85]
	_ = x[MemoryKindFixedPointExpression-86]
	_ = x[MemoryKindArrayExpression-87]
	_ = x[MemoryKindDictionaryExpression-88]
	_ = x[MemoryKindIdentifierExpression-89]
	_ = x[MemoryKindInvocationExpression-90]
	_ = x[MemoryKindMemberExpression-91]
	_ = x[MemoryKindIndexExpression-92]
	_ = x[MemoryKindConditionalExpression-93]
	_ = x[MemoryKindUnaryExpression-94]
	_ = x[MemoryKindBinaryExpression-95]
	_ = x[MemoryKindFunctionExpression-96]
	_ = x[MemoryKindCastingExpression-97]
	_ = x[MemoryKindCreateExpression-98]
	_ = x[MemoryKindDestroyExpression-99]
	_ = x[MemoryKindReferenceExpression-100]
	_ = x[MemoryKindForceExpression-101]
	_ = x[MemoryKindPathExpression-102]
	_ = x[MemoryKindConstantSizedType-103]
	_ = x[MemoryKindDictionaryType-104]
	_ = x[MemoryKindFunctionType-105]
	_ = x[MemoryKindInstantiationType-106]
	_ = x[MemoryKindNominalType-107]
	_ = x[MemoryKindOptionalType-108]
	_ = x[MemoryKindReferenceType-109]
	_ = x[MemoryKindRestrictedType-110]
	_ = x[MemoryKindVariableSizedType-111]
	_ = x[MemoryKindPosition-112]
	_ = x[MemoryKindRange-113]
	_ = x[MemoryKindElaboration-114]
	_ = x[MemoryKindActivation-115]
	_ = x[MemoryKindActivationEntries-116]
	_ = x[MemoryKindLast-117]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayBaseDictionaryBaseCompositeBaseSimpleCompositeBaseOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntSimpleCompositeAtreeArrayDataSlabAtreeArrayMetaDataSlabAtreeArrayElementOverheadAtreeMapDataSlabAtreeMapMetaDataSlabAtreeMapElementOverheadAtreeMapPreAllocatedElementPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeRestrictedStaticTypeReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeRawStringAddressLocationBytesVariableValueTokenSyntaxTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeElaborationActivationActivationEntriesLast"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 56, 70, 83, 102, 110, 113, 117, 126, 135, 150, 159, 180, 203, 222, 234, 247, 253, 268, 286, 308, 333, 349, 369, 392, 419, 438, 457, 476, 499, 522, 542, 560, 580, 599, 619, 637, 646, 661, 666, 674, 684, 695, 705, 712, 722, 730, 735, 748, 757, 770, 778, 785, 799, 814, 833, 853, 873, 892, 908, 930, 947, 966, 992, 1009, 1028, 1042, 1059, 1072, 1091, 1103, 1114, 1129, 1142, 1157, 1171, 1188, 1201, 1217, 1234, 1254, 1269, 1289, 1309, 1329, 1345, 1360, 1381, 1396, 1412, 1430, 1447, 1463, 1480, 1499, 1514, 1528, 1545, 1559, 1571, 1588, 1599, 1611, 1624, 1638, 1655, 1663, 1668, 1679, 1689, 1706, 1710}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
