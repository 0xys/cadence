// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArrayBase-7]
	_ = x[MemoryKindArrayLength-8]
	_ = x[MemoryKindDictionaryBase-9]
	_ = x[MemoryKindDictionarySize-10]
	_ = x[MemoryKindCompositeBase-11]
	_ = x[MemoryKindCompositeSize-12]
	_ = x[MemoryKindOptional-13]
	_ = x[MemoryKindNil-14]
	_ = x[MemoryKindVoid-15]
	_ = x[MemoryKindTypeValue-16]
	_ = x[MemoryKindPathValue-17]
	_ = x[MemoryKindCapabilityValue-18]
	_ = x[MemoryKindLinkValue-19]
	_ = x[MemoryKindStorageReferenceValue-20]
	_ = x[MemoryKindEphemeralReferenceValue-21]
	_ = x[MemoryKindInterpretedFunction-22]
	_ = x[MemoryKindHostFunction-23]
	_ = x[MemoryKindBoundFunction-24]
	_ = x[MemoryKindBigInt-25]
	_ = x[MemoryKindRawString-26]
	_ = x[MemoryKindAddressLocation-27]
	_ = x[MemoryKindBytes-28]
	_ = x[MemoryKindVariable-29]
	_ = x[MemoryKindValueToken-30]
	_ = x[MemoryKindSyntaxToken-31]
	_ = x[MemoryKindSpaceToken-32]
	_ = x[MemoryKindProgram-33]
	_ = x[MemoryKindIdentifier-34]
	_ = x[MemoryKindArgument-35]
	_ = x[MemoryKindBlock-36]
	_ = x[MemoryKindFunctionBlock-37]
	_ = x[MemoryKindParameter-38]
	_ = x[MemoryKindParameterList-39]
	_ = x[MemoryKindTransfer-40]
	_ = x[MemoryKindMembers-41]
	_ = x[MemoryKindTypeAnnotation-42]
	_ = x[MemoryKindFunctionDeclaration-43]
	_ = x[MemoryKindCompositeDeclaration-44]
	_ = x[MemoryKindInterfaceDeclaration-45]
	_ = x[MemoryKindEnumCaseDeclaration-46]
	_ = x[MemoryKindFieldDeclaration-47]
	_ = x[MemoryKindTransactionDeclaration-48]
	_ = x[MemoryKindImportDeclaration-49]
	_ = x[MemoryKindVariableDeclaration-50]
	_ = x[MemoryKindSpecialFunctionDeclaration-51]
	_ = x[MemoryKindPragmaDeclaration-52]
	_ = x[MemoryKindAssignmentStatement-53]
	_ = x[MemoryKindBreakStatement-54]
	_ = x[MemoryKindContinueStatement-55]
	_ = x[MemoryKindEmitStatement-56]
	_ = x[MemoryKindExpressionStatement-57]
	_ = x[MemoryKindForStatement-58]
	_ = x[MemoryKindIfStatement-59]
	_ = x[MemoryKindReturnStatement-60]
	_ = x[MemoryKindSwapStatement-61]
	_ = x[MemoryKindSwitchStatement-62]
	_ = x[MemoryKindWhileStatement-63]
	_ = x[MemoryKindBooleanExpression-64]
	_ = x[MemoryKindNilExpression-65]
	_ = x[MemoryKindStringExpression-66]
	_ = x[MemoryKindIntegerExpression-67]
	_ = x[MemoryKindFixedPointExpression-68]
	_ = x[MemoryKindArrayExpression-69]
	_ = x[MemoryKindDictionaryExpression-70]
	_ = x[MemoryKindIdentifierExpression-71]
	_ = x[MemoryKindInvocationExpression-72]
	_ = x[MemoryKindMemberExpression-73]
	_ = x[MemoryKindIndexExpression-74]
	_ = x[MemoryKindConditionalExpression-75]
	_ = x[MemoryKindUnaryExpression-76]
	_ = x[MemoryKindBinaryExpression-77]
	_ = x[MemoryKindFunctionExpression-78]
	_ = x[MemoryKindCastingExpression-79]
	_ = x[MemoryKindCreateExpression-80]
	_ = x[MemoryKindDestroyExpression-81]
	_ = x[MemoryKindReferenceExpression-82]
	_ = x[MemoryKindForceExpression-83]
	_ = x[MemoryKindPathExpression-84]
	_ = x[MemoryKindConstantSizedType-85]
	_ = x[MemoryKindDictionaryType-86]
	_ = x[MemoryKindFunctionType-87]
	_ = x[MemoryKindInstantiationType-88]
	_ = x[MemoryKindNominalType-89]
	_ = x[MemoryKindOptionalType-90]
	_ = x[MemoryKindReferenceType-91]
	_ = x[MemoryKindRestrictedType-92]
	_ = x[MemoryKindVariableSizedType-93]
	_ = x[MemoryKindPosition-94]
	_ = x[MemoryKindRange-95]
	_ = x[MemoryKindLast-96]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayBaseArrayLengthDictionaryBaseDictionarySizeCompositeBaseCompositeSizeOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntRawStringAddressLocationBytesVariableValueTokenSyntaxTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeLast"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 56, 67, 81, 95, 108, 121, 129, 132, 136, 145, 154, 169, 178, 199, 222, 241, 253, 266, 272, 281, 296, 301, 309, 319, 330, 340, 347, 357, 365, 370, 383, 392, 405, 413, 420, 434, 453, 473, 493, 512, 528, 550, 567, 586, 612, 629, 648, 662, 679, 692, 711, 723, 734, 749, 762, 777, 791, 808, 821, 837, 854, 874, 889, 909, 929, 949, 965, 980, 1001, 1016, 1032, 1050, 1067, 1083, 1100, 1119, 1134, 1148, 1165, 1179, 1191, 1208, 1219, 1231, 1244, 1258, 1275, 1283, 1288, 1292}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
