// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArrayBase-7]
	_ = x[MemoryKindDictionaryBase-8]
	_ = x[MemoryKindCompositeBase-9]
	_ = x[MemoryKindSimpleCompositeBase-10]
	_ = x[MemoryKindOptional-11]
	_ = x[MemoryKindNil-12]
	_ = x[MemoryKindVoid-13]
	_ = x[MemoryKindTypeValue-14]
	_ = x[MemoryKindPathValue-15]
	_ = x[MemoryKindCapabilityValue-16]
	_ = x[MemoryKindLinkValue-17]
	_ = x[MemoryKindStorageReferenceValue-18]
	_ = x[MemoryKindEphemeralReferenceValue-19]
	_ = x[MemoryKindInterpretedFunction-20]
	_ = x[MemoryKindHostFunction-21]
	_ = x[MemoryKindBoundFunction-22]
	_ = x[MemoryKindBigInt-23]
	_ = x[MemoryKindSimpleComposite-24]
	_ = x[MemoryKindAtreeArrayDataSlab-25]
	_ = x[MemoryKindAtreeArrayMetaDataSlab-26]
	_ = x[MemoryKindAtreeMapDataSlab-27]
	_ = x[MemoryKindAtreeMapMetaDataSlab-28]
	_ = x[MemoryKindAtreeMapElementOverhead-29]
	_ = x[MemoryKindPrimitiveStaticType-30]
	_ = x[MemoryKindCompositeStaticType-31]
	_ = x[MemoryKindInterfaceStaticType-32]
	_ = x[MemoryKindVariableSizedStaticType-33]
	_ = x[MemoryKindConstantSizedStaticType-34]
	_ = x[MemoryKindDictionaryStaticType-35]
	_ = x[MemoryKindOptionalStaticType-36]
	_ = x[MemoryKindRestrictedStaticType-37]
	_ = x[MemoryKindReferenceStaticType-38]
	_ = x[MemoryKindCapabilityStaticType-39]
	_ = x[MemoryKindFunctionStaticType-40]
	_ = x[MemoryKindRawString-41]
	_ = x[MemoryKindAddressLocation-42]
	_ = x[MemoryKindBytes-43]
	_ = x[MemoryKindVariable-44]
	_ = x[MemoryKindValueToken-45]
	_ = x[MemoryKindSyntaxToken-46]
	_ = x[MemoryKindSpaceToken-47]
	_ = x[MemoryKindProgram-48]
	_ = x[MemoryKindIdentifier-49]
	_ = x[MemoryKindArgument-50]
	_ = x[MemoryKindBlock-51]
	_ = x[MemoryKindFunctionBlock-52]
	_ = x[MemoryKindParameter-53]
	_ = x[MemoryKindParameterList-54]
	_ = x[MemoryKindTransfer-55]
	_ = x[MemoryKindMembers-56]
	_ = x[MemoryKindTypeAnnotation-57]
	_ = x[MemoryKindDictionaryEntry-58]
	_ = x[MemoryKindFunctionDeclaration-59]
	_ = x[MemoryKindCompositeDeclaration-60]
	_ = x[MemoryKindInterfaceDeclaration-61]
	_ = x[MemoryKindEnumCaseDeclaration-62]
	_ = x[MemoryKindFieldDeclaration-63]
	_ = x[MemoryKindTransactionDeclaration-64]
	_ = x[MemoryKindImportDeclaration-65]
	_ = x[MemoryKindVariableDeclaration-66]
	_ = x[MemoryKindSpecialFunctionDeclaration-67]
	_ = x[MemoryKindPragmaDeclaration-68]
	_ = x[MemoryKindAssignmentStatement-69]
	_ = x[MemoryKindBreakStatement-70]
	_ = x[MemoryKindContinueStatement-71]
	_ = x[MemoryKindEmitStatement-72]
	_ = x[MemoryKindExpressionStatement-73]
	_ = x[MemoryKindForStatement-74]
	_ = x[MemoryKindIfStatement-75]
	_ = x[MemoryKindReturnStatement-76]
	_ = x[MemoryKindSwapStatement-77]
	_ = x[MemoryKindSwitchStatement-78]
	_ = x[MemoryKindWhileStatement-79]
	_ = x[MemoryKindBooleanExpression-80]
	_ = x[MemoryKindNilExpression-81]
	_ = x[MemoryKindStringExpression-82]
	_ = x[MemoryKindIntegerExpression-83]
	_ = x[MemoryKindFixedPointExpression-84]
	_ = x[MemoryKindArrayExpression-85]
	_ = x[MemoryKindDictionaryExpression-86]
	_ = x[MemoryKindIdentifierExpression-87]
	_ = x[MemoryKindInvocationExpression-88]
	_ = x[MemoryKindMemberExpression-89]
	_ = x[MemoryKindIndexExpression-90]
	_ = x[MemoryKindConditionalExpression-91]
	_ = x[MemoryKindUnaryExpression-92]
	_ = x[MemoryKindBinaryExpression-93]
	_ = x[MemoryKindFunctionExpression-94]
	_ = x[MemoryKindCastingExpression-95]
	_ = x[MemoryKindCreateExpression-96]
	_ = x[MemoryKindDestroyExpression-97]
	_ = x[MemoryKindReferenceExpression-98]
	_ = x[MemoryKindForceExpression-99]
	_ = x[MemoryKindPathExpression-100]
	_ = x[MemoryKindConstantSizedType-101]
	_ = x[MemoryKindDictionaryType-102]
	_ = x[MemoryKindFunctionType-103]
	_ = x[MemoryKindInstantiationType-104]
	_ = x[MemoryKindNominalType-105]
	_ = x[MemoryKindOptionalType-106]
	_ = x[MemoryKindReferenceType-107]
	_ = x[MemoryKindRestrictedType-108]
	_ = x[MemoryKindVariableSizedType-109]
	_ = x[MemoryKindPosition-110]
	_ = x[MemoryKindRange-111]
	_ = x[MemoryKindElaboration-112]
	_ = x[MemoryKindActivation-113]
	_ = x[MemoryKindActivationEntries-114]
	_ = x[MemoryKindVariableSizedSemaType-115]
	_ = x[MemoryKindConstantSizedSemaType-116]
	_ = x[MemoryKindDictionarySemaType-117]
	_ = x[MemoryKindOptionalSemaType-118]
	_ = x[MemoryKindRestrictedSemaType-119]
	_ = x[MemoryKindReferenceSemaType-120]
	_ = x[MemoryKindCapabilitySemaType-121]
	_ = x[MemoryKindOrderedMap-122]
	_ = x[MemoryKindOrderedMapEntryList-123]
	_ = x[MemoryKindOrderedMapEntry-124]
	_ = x[MemoryKindLast-125]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayBaseDictionaryBaseCompositeBaseSimpleCompositeBaseOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntSimpleCompositeAtreeArrayDataSlabAtreeArrayMetaDataSlabAtreeMapDataSlabAtreeMapMetaDataSlabAtreeMapElementOverheadPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeRestrictedStaticTypeReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeRawStringAddressLocationBytesVariableValueTokenSyntaxTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeElaborationActivationActivationEntriesVariableSizedSemaTypeConstantSizedSemaTypeDictionarySemaTypeOptionalSemaTypeRestrictedSemaTypeReferenceSemaTypeCapabilitySemaTypeOrderedMapOrderedMapEntryListOrderedMapEntryLast"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 56, 70, 83, 102, 110, 113, 117, 126, 135, 150, 159, 180, 203, 222, 234, 247, 253, 268, 286, 308, 324, 344, 367, 386, 405, 424, 447, 470, 490, 508, 528, 547, 567, 585, 594, 609, 614, 622, 632, 643, 653, 660, 670, 678, 683, 696, 705, 718, 726, 733, 747, 762, 781, 801, 821, 840, 856, 878, 895, 914, 940, 957, 976, 990, 1007, 1020, 1039, 1051, 1062, 1077, 1090, 1105, 1119, 1136, 1149, 1165, 1182, 1202, 1217, 1237, 1257, 1277, 1293, 1308, 1329, 1344, 1360, 1378, 1395, 1411, 1428, 1447, 1462, 1476, 1493, 1507, 1519, 1536, 1547, 1559, 1572, 1586, 1603, 1611, 1616, 1627, 1637, 1654, 1675, 1696, 1714, 1730, 1748, 1765, 1783, 1793, 1812, 1827, 1831}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
