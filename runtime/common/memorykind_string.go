// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArrayBase-7]
	_ = x[MemoryKindArrayLength-8]
	_ = x[MemoryKindDictionaryBase-9]
	_ = x[MemoryKindDictionarySize-10]
	_ = x[MemoryKindCompositeBase-11]
	_ = x[MemoryKindCompositeSize-12]
	_ = x[MemoryKindOptional-13]
	_ = x[MemoryKindNil-14]
	_ = x[MemoryKindVoid-15]
	_ = x[MemoryKindTypeValue-16]
	_ = x[MemoryKindPathValue-17]
	_ = x[MemoryKindCapabilityValue-18]
	_ = x[MemoryKindLinkValue-19]
	_ = x[MemoryKindStorageReferenceValue-20]
	_ = x[MemoryKindEphemeralReferenceValue-21]
	_ = x[MemoryKindInterpretedFunction-22]
	_ = x[MemoryKindHostFunction-23]
	_ = x[MemoryKindBoundFunction-24]
	_ = x[MemoryKindBigInt-25]
	_ = x[MemoryKindRawString-26]
	_ = x[MemoryKindAddressLocation-27]
	_ = x[MemoryKindBytes-28]
	_ = x[MemoryKindVariable-29]
	_ = x[MemoryKindTokenIdentifier-30]
	_ = x[MemoryKindTokenComment-31]
	_ = x[MemoryKindTokenNumericLiteral-32]
	_ = x[MemoryKindTokenSyntax-33]
	_ = x[MemoryKindIdentifier-34]
	_ = x[MemoryKindArgument-35]
	_ = x[MemoryKindBlock-36]
	_ = x[MemoryKindFunctionDeclaration-37]
	_ = x[MemoryKindCompositeDeclaration-38]
	_ = x[MemoryKindInterfaceDeclaration-39]
	_ = x[MemoryKindEnumCaseDeclaration-40]
	_ = x[MemoryKindFieldDeclaration-41]
	_ = x[MemoryKindTransactionDeclaration-42]
	_ = x[MemoryKindImportDeclaration-43]
	_ = x[MemoryKindVariableDeclaration-44]
	_ = x[MemoryKindSpecialFunctionDeclaration-45]
	_ = x[MemoryKindPragmaDeclaration-46]
	_ = x[MemoryKindAssignmentStatement-47]
	_ = x[MemoryKindBreakStatement-48]
	_ = x[MemoryKindContinueStatement-49]
	_ = x[MemoryKindEmitStatement-50]
	_ = x[MemoryKindExpressionStatement-51]
	_ = x[MemoryKindForStatement-52]
	_ = x[MemoryKindIfStatement-53]
	_ = x[MemoryKindReturnStatement-54]
	_ = x[MemoryKindSwapStatement-55]
	_ = x[MemoryKindSwitchStatement-56]
	_ = x[MemoryKindWhileStatement-57]
	_ = x[MemoryKindBooleanExpression-58]
	_ = x[MemoryKindNilExpression-59]
	_ = x[MemoryKindStringExpression-60]
	_ = x[MemoryKindIntegerExpression-61]
	_ = x[MemoryKindFixedPointExpression-62]
	_ = x[MemoryKindArrayExpression-63]
	_ = x[MemoryKindDictionaryExpression-64]
	_ = x[MemoryKindIdentifierExpression-65]
	_ = x[MemoryKindInvocationExpression-66]
	_ = x[MemoryKindMemberExpression-67]
	_ = x[MemoryKindIndexExpression-68]
	_ = x[MemoryKindConditionalExpression-69]
	_ = x[MemoryKindUnaryExpression-70]
	_ = x[MemoryKindBinaryExpression-71]
	_ = x[MemoryKindFunctionExpression-72]
	_ = x[MemoryKindCastingExpression-73]
	_ = x[MemoryKindCreateExpression-74]
	_ = x[MemoryKindDestroyExpression-75]
	_ = x[MemoryKindReferenceExpression-76]
	_ = x[MemoryKindForceExpression-77]
	_ = x[MemoryKindPathExpression-78]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayBaseArrayLengthDictionaryBaseDictionarySizeCompositeBaseCompositeSizeOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntRawStringAddressLocationBytesVariableTokenIdentifierTokenCommentTokenNumericLiteralTokenSyntaxIdentifierArgumentBlockFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpression"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 56, 67, 81, 95, 108, 121, 129, 132, 136, 145, 154, 169, 178, 199, 222, 241, 253, 266, 272, 281, 296, 301, 309, 324, 336, 355, 366, 376, 384, 389, 408, 428, 448, 467, 483, 505, 522, 541, 567, 584, 603, 617, 634, 647, 666, 678, 689, 704, 717, 732, 746, 763, 776, 792, 809, 829, 844, 864, 884, 904, 920, 935, 956, 971, 987, 1005, 1022, 1038, 1055, 1074, 1089, 1103}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
