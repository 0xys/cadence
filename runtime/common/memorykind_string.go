// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArray-7]
	_ = x[MemoryKindDictionary-8]
	_ = x[MemoryKindComposite-9]
	_ = x[MemoryKindOptional-10]
	_ = x[MemoryKindNil-11]
	_ = x[MemoryKindVoid-12]
	_ = x[MemoryKindTypeValue-13]
	_ = x[MemoryKindPathValue-14]
	_ = x[MemoryKindCapabilityValue-15]
	_ = x[MemoryKindLinkValue-16]
	_ = x[MemoryKindStorageReferenceValue-17]
	_ = x[MemoryKindEphemeralReferenceValue-18]
	_ = x[MemoryKindInterpretedFunction-19]
	_ = x[MemoryKindHostFunction-20]
	_ = x[MemoryKindBoundFunction-21]
	_ = x[MemoryKindBigInt-22]
	_ = x[MemoryKindRawString-23]
	_ = x[MemoryKindVariable-24]
	_ = x[MemoryKindTokenIdentifier-25]
	_ = x[MemoryKindTokenComment-26]
	_ = x[MemoryKindTokenNumericLiteral-27]
	_ = x[MemoryKindTokenSyntax-28]
	_ = x[MemoryKindIdentifier-29]
	_ = x[MemoryKindArgument-30]
	_ = x[MemoryKindBlock-31]
	_ = x[MemoryKindFunctionBlock-32]
	_ = x[MemoryKindParameter-33]
	_ = x[MemoryKindParameterList-34]
	_ = x[MemoryKindFunctionDeclaration-35]
	_ = x[MemoryKindCompositeDeclaration-36]
	_ = x[MemoryKindInterfaceDeclaration-37]
	_ = x[MemoryKindEnumCaseDeclaration-38]
	_ = x[MemoryKindFieldDeclaration-39]
	_ = x[MemoryKindTransactionDeclaration-40]
	_ = x[MemoryKindImportDeclaration-41]
	_ = x[MemoryKindVariableDeclaration-42]
	_ = x[MemoryKindSpecialFunctionDeclaration-43]
	_ = x[MemoryKindPragmaDeclaration-44]
	_ = x[MemoryKindAssignmentStatement-45]
	_ = x[MemoryKindBreakStatement-46]
	_ = x[MemoryKindContinueStatement-47]
	_ = x[MemoryKindEmitStatement-48]
	_ = x[MemoryKindExpressionStatement-49]
	_ = x[MemoryKindForStatement-50]
	_ = x[MemoryKindIfStatement-51]
	_ = x[MemoryKindReturnStatement-52]
	_ = x[MemoryKindSwapStatement-53]
	_ = x[MemoryKindSwitchStatement-54]
	_ = x[MemoryKindWhileStatement-55]
	_ = x[MemoryKindBooleanExpression-56]
	_ = x[MemoryKindNilExpression-57]
	_ = x[MemoryKindStringExpression-58]
	_ = x[MemoryKindIntegerExpression-59]
	_ = x[MemoryKindFixedPointExpression-60]
	_ = x[MemoryKindArrayExpression-61]
	_ = x[MemoryKindDictionaryExpression-62]
	_ = x[MemoryKindIdentifierExpression-63]
	_ = x[MemoryKindInvocationExpression-64]
	_ = x[MemoryKindMemberExpression-65]
	_ = x[MemoryKindIndexExpression-66]
	_ = x[MemoryKindConditionalExpression-67]
	_ = x[MemoryKindUnaryExpression-68]
	_ = x[MemoryKindBinaryExpression-69]
	_ = x[MemoryKindFunctionExpression-70]
	_ = x[MemoryKindCastingExpression-71]
	_ = x[MemoryKindCreateExpression-72]
	_ = x[MemoryKindDestroyExpression-73]
	_ = x[MemoryKindReferenceExpression-74]
	_ = x[MemoryKindForceExpression-75]
	_ = x[MemoryKindPathExpression-76]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayDictionaryCompositeOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntRawStringVariableTokenIdentifierTokenCommentTokenNumericLiteralTokenSyntaxIdentifierArgumentBlockFunctionBlockParameterParameterListFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpression"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 52, 62, 71, 79, 82, 86, 95, 104, 119, 128, 149, 172, 191, 203, 216, 222, 231, 239, 254, 266, 285, 296, 306, 314, 319, 332, 341, 354, 373, 393, 413, 432, 448, 470, 487, 506, 532, 549, 568, 582, 599, 612, 631, 643, 654, 669, 682, 697, 711, 728, 741, 757, 774, 794, 809, 829, 849, 869, 885, 900, 921, 936, 952, 970, 987, 1003, 1020, 1039, 1054, 1068}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
