// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArray-7]
	_ = x[MemoryKindDictionary-8]
	_ = x[MemoryKindComposite-9]
	_ = x[MemoryKindOptional-10]
	_ = x[MemoryKindNil-11]
	_ = x[MemoryKindVoid-12]
	_ = x[MemoryKindTypeValue-13]
	_ = x[MemoryKindPathValue-14]
	_ = x[MemoryKindCapabilityValue-15]
	_ = x[MemoryKindLinkValue-16]
	_ = x[MemoryKindStorageReferenceValue-17]
	_ = x[MemoryKindEphemeralReferenceValue-18]
	_ = x[MemoryKindInterpretedFunction-19]
	_ = x[MemoryKindHostFunction-20]
	_ = x[MemoryKindBoundFunction-21]
	_ = x[MemoryKindBigInt-22]
	_ = x[MemoryKindRawString-23]
	_ = x[MemoryKindVariable-24]
	_ = x[MemoryKindTokenIdentifier-25]
	_ = x[MemoryKindTokenComment-26]
	_ = x[MemoryKindTokenNumericLiteral-27]
	_ = x[MemoryKindTokenSyntax-28]
	_ = x[MemoryKindProgram-29]
	_ = x[MemoryKindIdentifier-30]
	_ = x[MemoryKindArgument-31]
	_ = x[MemoryKindBlock-32]
	_ = x[MemoryKindFunctionBlock-33]
	_ = x[MemoryKindParameter-34]
	_ = x[MemoryKindParameterList-35]
	_ = x[MemoryKindTransfer-36]
	_ = x[MemoryKindMembers-37]
	_ = x[MemoryKindTypeAnnotation-38]
	_ = x[MemoryKindFunctionDeclaration-39]
	_ = x[MemoryKindCompositeDeclaration-40]
	_ = x[MemoryKindInterfaceDeclaration-41]
	_ = x[MemoryKindEnumCaseDeclaration-42]
	_ = x[MemoryKindFieldDeclaration-43]
	_ = x[MemoryKindTransactionDeclaration-44]
	_ = x[MemoryKindImportDeclaration-45]
	_ = x[MemoryKindVariableDeclaration-46]
	_ = x[MemoryKindSpecialFunctionDeclaration-47]
	_ = x[MemoryKindPragmaDeclaration-48]
	_ = x[MemoryKindAssignmentStatement-49]
	_ = x[MemoryKindBreakStatement-50]
	_ = x[MemoryKindContinueStatement-51]
	_ = x[MemoryKindEmitStatement-52]
	_ = x[MemoryKindExpressionStatement-53]
	_ = x[MemoryKindForStatement-54]
	_ = x[MemoryKindIfStatement-55]
	_ = x[MemoryKindReturnStatement-56]
	_ = x[MemoryKindSwapStatement-57]
	_ = x[MemoryKindSwitchStatement-58]
	_ = x[MemoryKindWhileStatement-59]
	_ = x[MemoryKindBooleanExpression-60]
	_ = x[MemoryKindNilExpression-61]
	_ = x[MemoryKindStringExpression-62]
	_ = x[MemoryKindIntegerExpression-63]
	_ = x[MemoryKindFixedPointExpression-64]
	_ = x[MemoryKindArrayExpression-65]
	_ = x[MemoryKindDictionaryExpression-66]
	_ = x[MemoryKindIdentifierExpression-67]
	_ = x[MemoryKindInvocationExpression-68]
	_ = x[MemoryKindMemberExpression-69]
	_ = x[MemoryKindIndexExpression-70]
	_ = x[MemoryKindConditionalExpression-71]
	_ = x[MemoryKindUnaryExpression-72]
	_ = x[MemoryKindBinaryExpression-73]
	_ = x[MemoryKindFunctionExpression-74]
	_ = x[MemoryKindCastingExpression-75]
	_ = x[MemoryKindCreateExpression-76]
	_ = x[MemoryKindDestroyExpression-77]
	_ = x[MemoryKindReferenceExpression-78]
	_ = x[MemoryKindForceExpression-79]
	_ = x[MemoryKindPathExpression-80]
	_ = x[MemoryKindConstantSizedType-81]
	_ = x[MemoryKindDictionaryType-82]
	_ = x[MemoryKindFunctionType-83]
	_ = x[MemoryKindInstantiationType-84]
	_ = x[MemoryKindNominalType-85]
	_ = x[MemoryKindOptionalType-86]
	_ = x[MemoryKindReferenceType-87]
	_ = x[MemoryKindRestrictedType-88]
	_ = x[MemoryKindVariableSizedType-89]
	_ = x[MemoryKindPosition-90]
	_ = x[MemoryKindRange-91]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayDictionaryCompositeOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntRawStringVariableTokenIdentifierTokenCommentTokenNumericLiteralTokenSyntaxProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRange"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 52, 62, 71, 79, 82, 86, 95, 104, 119, 128, 149, 172, 191, 203, 216, 222, 231, 239, 254, 266, 285, 296, 303, 313, 321, 326, 339, 348, 361, 369, 376, 390, 409, 429, 449, 468, 484, 506, 523, 542, 568, 585, 604, 618, 635, 648, 667, 679, 690, 705, 718, 733, 747, 764, 777, 793, 810, 830, 845, 865, 885, 905, 921, 936, 957, 972, 988, 1006, 1023, 1039, 1056, 1075, 1090, 1104, 1121, 1135, 1147, 1164, 1175, 1187, 1200, 1214, 1231, 1239, 1244}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
